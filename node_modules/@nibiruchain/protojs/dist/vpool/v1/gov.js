"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EditSwapInvariantsProposal_SwapInvariantMultiple = exports.EditSwapInvariantsProposal = exports.EditPoolConfigProposal = exports.CreatePoolProposal = exports.protobufPackage = void 0;
/* eslint-disable */
const state_1 = require("./state");
const long_1 = __importDefault(require("long"));
const _m0 = __importStar(require("protobufjs/minimal"));
exports.protobufPackage = "nibiru.vpool.v1";
function createBaseCreatePoolProposal() {
    return {
        title: "",
        description: "",
        pair: "",
        quoteAssetReserve: "",
        baseAssetReserve: "",
        config: undefined,
    };
}
exports.CreatePoolProposal = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        if (message.pair !== "") {
            writer.uint32(26).string(message.pair);
        }
        if (message.quoteAssetReserve !== "") {
            writer.uint32(42).string(message.quoteAssetReserve);
        }
        if (message.baseAssetReserve !== "") {
            writer.uint32(50).string(message.baseAssetReserve);
        }
        if (message.config !== undefined) {
            state_1.VpoolConfig.encode(message.config, writer.uint32(58).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCreatePoolProposal();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.pair = reader.string();
                    break;
                case 5:
                    message.quoteAssetReserve = reader.string();
                    break;
                case 6:
                    message.baseAssetReserve = reader.string();
                    break;
                case 7:
                    message.config = state_1.VpoolConfig.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            title: isSet(object.title) ? String(object.title) : "",
            description: isSet(object.description) ? String(object.description) : "",
            pair: isSet(object.pair) ? String(object.pair) : "",
            quoteAssetReserve: isSet(object.quoteAssetReserve)
                ? String(object.quoteAssetReserve)
                : "",
            baseAssetReserve: isSet(object.baseAssetReserve)
                ? String(object.baseAssetReserve)
                : "",
            config: isSet(object.config) ? state_1.VpoolConfig.fromJSON(object.config) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined && (obj.description = message.description);
        message.pair !== undefined && (obj.pair = message.pair);
        message.quoteAssetReserve !== undefined &&
            (obj.quoteAssetReserve = message.quoteAssetReserve);
        message.baseAssetReserve !== undefined &&
            (obj.baseAssetReserve = message.baseAssetReserve);
        message.config !== undefined &&
            (obj.config = message.config ? state_1.VpoolConfig.toJSON(message.config) : undefined);
        return obj;
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseCreatePoolProposal();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.pair = (_c = object.pair) !== null && _c !== void 0 ? _c : "";
        message.quoteAssetReserve = (_d = object.quoteAssetReserve) !== null && _d !== void 0 ? _d : "";
        message.baseAssetReserve = (_e = object.baseAssetReserve) !== null && _e !== void 0 ? _e : "";
        message.config =
            object.config !== undefined && object.config !== null
                ? state_1.VpoolConfig.fromPartial(object.config)
                : undefined;
        return message;
    },
};
function createBaseEditPoolConfigProposal() {
    return { title: "", description: "", pair: "", config: undefined };
}
exports.EditPoolConfigProposal = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        if (message.pair !== "") {
            writer.uint32(26).string(message.pair);
        }
        if (message.config !== undefined) {
            state_1.VpoolConfig.encode(message.config, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseEditPoolConfigProposal();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.pair = reader.string();
                    break;
                case 4:
                    message.config = state_1.VpoolConfig.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            title: isSet(object.title) ? String(object.title) : "",
            description: isSet(object.description) ? String(object.description) : "",
            pair: isSet(object.pair) ? String(object.pair) : "",
            config: isSet(object.config) ? state_1.VpoolConfig.fromJSON(object.config) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined && (obj.description = message.description);
        message.pair !== undefined && (obj.pair = message.pair);
        message.config !== undefined &&
            (obj.config = message.config ? state_1.VpoolConfig.toJSON(message.config) : undefined);
        return obj;
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseEditPoolConfigProposal();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.pair = (_c = object.pair) !== null && _c !== void 0 ? _c : "";
        message.config =
            object.config !== undefined && object.config !== null
                ? state_1.VpoolConfig.fromPartial(object.config)
                : undefined;
        return message;
    },
};
function createBaseEditSwapInvariantsProposal() {
    return { title: "", description: "", swapInvariantMaps: [] };
}
exports.EditSwapInvariantsProposal = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        for (const v of message.swapInvariantMaps) {
            exports.EditSwapInvariantsProposal_SwapInvariantMultiple.encode(v, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseEditSwapInvariantsProposal();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 5:
                    message.swapInvariantMaps.push(exports.EditSwapInvariantsProposal_SwapInvariantMultiple.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            title: isSet(object.title) ? String(object.title) : "",
            description: isSet(object.description) ? String(object.description) : "",
            swapInvariantMaps: Array.isArray(object === null || object === void 0 ? void 0 : object.swapInvariantMaps)
                ? object.swapInvariantMaps.map((e) => exports.EditSwapInvariantsProposal_SwapInvariantMultiple.fromJSON(e))
                : [],
        };
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined && (obj.description = message.description);
        if (message.swapInvariantMaps) {
            obj.swapInvariantMaps = message.swapInvariantMaps.map((e) => e ? exports.EditSwapInvariantsProposal_SwapInvariantMultiple.toJSON(e) : undefined);
        }
        else {
            obj.swapInvariantMaps = [];
        }
        return obj;
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseEditSwapInvariantsProposal();
        message.title = (_a = object.title) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.swapInvariantMaps =
            ((_c = object.swapInvariantMaps) === null || _c === void 0 ? void 0 : _c.map((e) => exports.EditSwapInvariantsProposal_SwapInvariantMultiple.fromPartial(e))) || [];
        return message;
    },
};
function createBaseEditSwapInvariantsProposal_SwapInvariantMultiple() {
    return { pair: "", multiplier: "" };
}
exports.EditSwapInvariantsProposal_SwapInvariantMultiple = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.pair !== "") {
            writer.uint32(26).string(message.pair);
        }
        if (message.multiplier !== "") {
            writer.uint32(34).string(message.multiplier);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseEditSwapInvariantsProposal_SwapInvariantMultiple();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 3:
                    message.pair = reader.string();
                    break;
                case 4:
                    message.multiplier = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            pair: isSet(object.pair) ? String(object.pair) : "",
            multiplier: isSet(object.multiplier) ? String(object.multiplier) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        message.pair !== undefined && (obj.pair = message.pair);
        message.multiplier !== undefined && (obj.multiplier = message.multiplier);
        return obj;
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseEditSwapInvariantsProposal_SwapInvariantMultiple();
        message.pair = (_a = object.pair) !== null && _a !== void 0 ? _a : "";
        message.multiplier = (_b = object.multiplier) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
if (_m0.util.Long !== long_1.default) {
    _m0.util.Long = long_1.default;
    _m0.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=gov.js.map