"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PriceSnapshot = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "nibiru.oracle.v1";
function createBasePriceSnapshot() {
    return { pair: "", price: "", timestampMs: long_1.default.ZERO };
}
exports.PriceSnapshot = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.pair !== "") {
            writer.uint32(10).string(message.pair);
        }
        if (message.price !== "") {
            writer.uint32(18).string(message.price);
        }
        if (!message.timestampMs.isZero()) {
            writer.uint32(24).int64(message.timestampMs);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePriceSnapshot();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.pair = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.price = reader.string();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.timestampMs = reader.int64();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            pair: isSet(object.pair) ? String(object.pair) : "",
            price: isSet(object.price) ? String(object.price) : "",
            timestampMs: isSet(object.timestampMs)
                ? long_1.default.fromValue(object.timestampMs)
                : long_1.default.ZERO,
        };
    },
    toJSON(message) {
        const obj = {};
        message.pair !== undefined && (obj.pair = message.pair);
        message.price !== undefined && (obj.price = message.price);
        message.timestampMs !== undefined &&
            (obj.timestampMs = (message.timestampMs || long_1.default.ZERO).toString());
        return obj;
    },
    create(base) {
        return exports.PriceSnapshot.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBasePriceSnapshot();
        message.pair = (_a = object.pair) !== null && _a !== void 0 ? _a : "";
        message.price = (_b = object.price) !== null && _b !== void 0 ? _b : "";
        message.timestampMs =
            object.timestampMs !== undefined && object.timestampMs !== null
                ? long_1.default.fromValue(object.timestampMs)
                : long_1.default.ZERO;
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=state.js.map