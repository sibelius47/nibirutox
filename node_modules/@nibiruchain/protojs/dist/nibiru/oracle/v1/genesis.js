"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MissCounter = exports.FeederDelegation = exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const oracle_1 = require("./oracle");
exports.protobufPackage = "nibiru.oracle.v1";
function createBaseGenesisState() {
    return {
        params: undefined,
        feederDelegations: [],
        exchangeRates: [],
        missCounters: [],
        aggregateExchangeRatePrevotes: [],
        aggregateExchangeRateVotes: [],
        pairs: [],
        rewards: [],
    };
}
exports.GenesisState = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.params !== undefined) {
            oracle_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.feederDelegations) {
            exports.FeederDelegation.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.exchangeRates) {
            oracle_1.ExchangeRateTuple.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.missCounters) {
            exports.MissCounter.encode(v, writer.uint32(34).fork()).ldelim();
        }
        for (const v of message.aggregateExchangeRatePrevotes) {
            oracle_1.AggregateExchangeRatePrevote.encode(v, writer.uint32(42).fork()).ldelim();
        }
        for (const v of message.aggregateExchangeRateVotes) {
            oracle_1.AggregateExchangeRateVote.encode(v, writer.uint32(50).fork()).ldelim();
        }
        for (const v of message.pairs) {
            writer.uint32(58).string(v);
        }
        for (const v of message.rewards) {
            oracle_1.Rewards.encode(v, writer.uint32(66).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGenesisState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.params = oracle_1.Params.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.feederDelegations.push(exports.FeederDelegation.decode(reader, reader.uint32()));
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.exchangeRates.push(oracle_1.ExchangeRateTuple.decode(reader, reader.uint32()));
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.missCounters.push(exports.MissCounter.decode(reader, reader.uint32()));
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.aggregateExchangeRatePrevotes.push(oracle_1.AggregateExchangeRatePrevote.decode(reader, reader.uint32()));
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.aggregateExchangeRateVotes.push(oracle_1.AggregateExchangeRateVote.decode(reader, reader.uint32()));
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.pairs.push(reader.string());
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.rewards.push(oracle_1.Rewards.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            params: isSet(object.params) ? oracle_1.Params.fromJSON(object.params) : undefined,
            feederDelegations: Array.isArray(object === null || object === void 0 ? void 0 : object.feederDelegations)
                ? object.feederDelegations.map((e) => exports.FeederDelegation.fromJSON(e))
                : [],
            exchangeRates: Array.isArray(object === null || object === void 0 ? void 0 : object.exchangeRates)
                ? object.exchangeRates.map((e) => oracle_1.ExchangeRateTuple.fromJSON(e))
                : [],
            missCounters: Array.isArray(object === null || object === void 0 ? void 0 : object.missCounters)
                ? object.missCounters.map((e) => exports.MissCounter.fromJSON(e))
                : [],
            aggregateExchangeRatePrevotes: Array.isArray(object === null || object === void 0 ? void 0 : object.aggregateExchangeRatePrevotes)
                ? object.aggregateExchangeRatePrevotes.map((e) => oracle_1.AggregateExchangeRatePrevote.fromJSON(e))
                : [],
            aggregateExchangeRateVotes: Array.isArray(object === null || object === void 0 ? void 0 : object.aggregateExchangeRateVotes)
                ? object.aggregateExchangeRateVotes.map((e) => oracle_1.AggregateExchangeRateVote.fromJSON(e))
                : [],
            pairs: Array.isArray(object === null || object === void 0 ? void 0 : object.pairs)
                ? object.pairs.map((e) => String(e))
                : [],
            rewards: Array.isArray(object === null || object === void 0 ? void 0 : object.rewards)
                ? object.rewards.map((e) => oracle_1.Rewards.fromJSON(e))
                : [],
        };
    },
    toJSON(message) {
        const obj = {};
        message.params !== undefined &&
            (obj.params = message.params ? oracle_1.Params.toJSON(message.params) : undefined);
        if (message.feederDelegations) {
            obj.feederDelegations = message.feederDelegations.map((e) => e ? exports.FeederDelegation.toJSON(e) : undefined);
        }
        else {
            obj.feederDelegations = [];
        }
        if (message.exchangeRates) {
            obj.exchangeRates = message.exchangeRates.map((e) => e ? oracle_1.ExchangeRateTuple.toJSON(e) : undefined);
        }
        else {
            obj.exchangeRates = [];
        }
        if (message.missCounters) {
            obj.missCounters = message.missCounters.map((e) => e ? exports.MissCounter.toJSON(e) : undefined);
        }
        else {
            obj.missCounters = [];
        }
        if (message.aggregateExchangeRatePrevotes) {
            obj.aggregateExchangeRatePrevotes =
                message.aggregateExchangeRatePrevotes.map((e) => e ? oracle_1.AggregateExchangeRatePrevote.toJSON(e) : undefined);
        }
        else {
            obj.aggregateExchangeRatePrevotes = [];
        }
        if (message.aggregateExchangeRateVotes) {
            obj.aggregateExchangeRateVotes = message.aggregateExchangeRateVotes.map((e) => (e ? oracle_1.AggregateExchangeRateVote.toJSON(e) : undefined));
        }
        else {
            obj.aggregateExchangeRateVotes = [];
        }
        if (message.pairs) {
            obj.pairs = message.pairs.map((e) => e);
        }
        else {
            obj.pairs = [];
        }
        if (message.rewards) {
            obj.rewards = message.rewards.map((e) => e ? oracle_1.Rewards.toJSON(e) : undefined);
        }
        else {
            obj.rewards = [];
        }
        return obj;
    },
    create(base) {
        return exports.GenesisState.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e, _f, _g;
        const message = createBaseGenesisState();
        message.params =
            object.params !== undefined && object.params !== null
                ? oracle_1.Params.fromPartial(object.params)
                : undefined;
        message.feederDelegations =
            ((_a = object.feederDelegations) === null || _a === void 0 ? void 0 : _a.map((e) => exports.FeederDelegation.fromPartial(e))) ||
                [];
        message.exchangeRates =
            ((_b = object.exchangeRates) === null || _b === void 0 ? void 0 : _b.map((e) => oracle_1.ExchangeRateTuple.fromPartial(e))) || [];
        message.missCounters =
            ((_c = object.missCounters) === null || _c === void 0 ? void 0 : _c.map((e) => exports.MissCounter.fromPartial(e))) || [];
        message.aggregateExchangeRatePrevotes =
            ((_d = object.aggregateExchangeRatePrevotes) === null || _d === void 0 ? void 0 : _d.map((e) => oracle_1.AggregateExchangeRatePrevote.fromPartial(e))) || [];
        message.aggregateExchangeRateVotes =
            ((_e = object.aggregateExchangeRateVotes) === null || _e === void 0 ? void 0 : _e.map((e) => oracle_1.AggregateExchangeRateVote.fromPartial(e))) || [];
        message.pairs = ((_f = object.pairs) === null || _f === void 0 ? void 0 : _f.map((e) => e)) || [];
        message.rewards = ((_g = object.rewards) === null || _g === void 0 ? void 0 : _g.map((e) => oracle_1.Rewards.fromPartial(e))) || [];
        return message;
    },
};
function createBaseFeederDelegation() {
    return { feederAddress: "", validatorAddress: "" };
}
exports.FeederDelegation = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.feederAddress !== "") {
            writer.uint32(10).string(message.feederAddress);
        }
        if (message.validatorAddress !== "") {
            writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseFeederDelegation();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.feederAddress = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.validatorAddress = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            feederAddress: isSet(object.feederAddress)
                ? String(object.feederAddress)
                : "",
            validatorAddress: isSet(object.validatorAddress)
                ? String(object.validatorAddress)
                : "",
        };
    },
    toJSON(message) {
        const obj = {};
        message.feederAddress !== undefined &&
            (obj.feederAddress = message.feederAddress);
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        return obj;
    },
    create(base) {
        return exports.FeederDelegation.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseFeederDelegation();
        message.feederAddress = (_a = object.feederAddress) !== null && _a !== void 0 ? _a : "";
        message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : "";
        return message;
    },
};
function createBaseMissCounter() {
    return { validatorAddress: "", missCounter: long_1.default.UZERO };
}
exports.MissCounter = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.validatorAddress !== "") {
            writer.uint32(10).string(message.validatorAddress);
        }
        if (!message.missCounter.isZero()) {
            writer.uint32(16).uint64(message.missCounter);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMissCounter();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.validatorAddress = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.missCounter = reader.uint64();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            validatorAddress: isSet(object.validatorAddress)
                ? String(object.validatorAddress)
                : "",
            missCounter: isSet(object.missCounter)
                ? long_1.default.fromValue(object.missCounter)
                : long_1.default.UZERO,
        };
    },
    toJSON(message) {
        const obj = {};
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        message.missCounter !== undefined &&
            (obj.missCounter = (message.missCounter || long_1.default.UZERO).toString());
        return obj;
    },
    create(base) {
        return exports.MissCounter.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseMissCounter();
        message.validatorAddress = (_a = object.validatorAddress) !== null && _a !== void 0 ? _a : "";
        message.missCounter =
            object.missCounter !== undefined && object.missCounter !== null
                ? long_1.default.fromValue(object.missCounter)
                : long_1.default.UZERO;
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=genesis.js.map