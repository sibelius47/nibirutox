"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExponentialCalculation = exports.InflationDistribution = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "nibiru.inflation.v1";
function createBaseInflationDistribution() {
    return { stakingRewards: "", communityPool: "", strategicReserves: "" };
}
exports.InflationDistribution = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.stakingRewards !== "") {
            writer.uint32(10).string(message.stakingRewards);
        }
        if (message.communityPool !== "") {
            writer.uint32(18).string(message.communityPool);
        }
        if (message.strategicReserves !== "") {
            writer.uint32(26).string(message.strategicReserves);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseInflationDistribution();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.stakingRewards = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.communityPool = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.strategicReserves = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            stakingRewards: isSet(object.stakingRewards)
                ? String(object.stakingRewards)
                : "",
            communityPool: isSet(object.communityPool)
                ? String(object.communityPool)
                : "",
            strategicReserves: isSet(object.strategicReserves)
                ? String(object.strategicReserves)
                : "",
        };
    },
    toJSON(message) {
        const obj = {};
        message.stakingRewards !== undefined &&
            (obj.stakingRewards = message.stakingRewards);
        message.communityPool !== undefined &&
            (obj.communityPool = message.communityPool);
        message.strategicReserves !== undefined &&
            (obj.strategicReserves = message.strategicReserves);
        return obj;
    },
    create(base) {
        return exports.InflationDistribution.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseInflationDistribution();
        message.stakingRewards = (_a = object.stakingRewards) !== null && _a !== void 0 ? _a : "";
        message.communityPool = (_b = object.communityPool) !== null && _b !== void 0 ? _b : "";
        message.strategicReserves = (_c = object.strategicReserves) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
function createBaseExponentialCalculation() {
    return { a: "", r: "", c: "" };
}
exports.ExponentialCalculation = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.a !== "") {
            writer.uint32(10).string(message.a);
        }
        if (message.r !== "") {
            writer.uint32(18).string(message.r);
        }
        if (message.c !== "") {
            writer.uint32(26).string(message.c);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseExponentialCalculation();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.a = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.r = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.c = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            a: isSet(object.a) ? String(object.a) : "",
            r: isSet(object.r) ? String(object.r) : "",
            c: isSet(object.c) ? String(object.c) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        message.a !== undefined && (obj.a = message.a);
        message.r !== undefined && (obj.r = message.r);
        message.c !== undefined && (obj.c = message.c);
        return obj;
    },
    create(base) {
        return exports.ExponentialCalculation.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseExponentialCalculation();
        message.a = (_a = object.a) !== null && _a !== void 0 ? _a : "";
        message.r = (_b = object.r) !== null && _b !== void 0 ? _b : "";
        message.c = (_c = object.c) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=inflation.js.map