import { EncodeObject, GeneratedType } from "@cosmjs/proto-signing";
import { MsgCreatePool, MsgExitPool, MsgJoinPool, MsgSwapAssets } from "@nibiruchain/protojs/dist/spot/v1/tx";
export declare const SPOT_MSG_TYPE_URLS: {
    MsgCreatePool: string;
    MsgJoinPool: string;
    MsgExitPool: string;
    MsgSwapAssets: string;
};
export declare const spotTypes: ReadonlyArray<[string, GeneratedType]>;
export interface MsgCreatePoolEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgCreatePool>;
}
export declare function isMsgCreatePoolEncodeObject(encodeObject: EncodeObject): encodeObject is MsgCreatePoolEncodeObject;
export interface MsgJoinPoolEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgJoinPool>;
}
export declare function isMsgJoinPoolEncodeObject(encodeObject: EncodeObject): encodeObject is MsgJoinPoolEncodeObject;
export interface MsgExitPoolEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgExitPool>;
}
export declare function isMsgExitPoolEncodeObject(encodeObject: EncodeObject): encodeObject is MsgExitPoolEncodeObject;
export interface MsgSwapAssetsEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgSwapAssets>;
}
export declare function isMsgSwapAssetsEncodeObject(encodeObject: EncodeObject): encodeObject is MsgSwapAssetsEncodeObject;
//# sourceMappingURL=spot.d.ts.map