import { AuthExtension, DistributionExtension, GovExtension, IbcExtension, QueryClient, StakingExtension, StargateClient, StargateClientOptions } from "@cosmjs/stargate";
import { Tendermint34Client } from "@cosmjs/tendermint-rpc";
import { CosmWasmClient, WasmExtension } from "@cosmjs/cosmwasm-stargate";
import { EpochsExtension } from "./epochs";
import { OracleExtension } from "./oracle";
import { PerpExtension } from "./perp";
import { SpotExtension } from "./spot";
import { UtilsExtension } from "./util";
import { VpoolExtension } from "./vpool";
export declare type NibiruExtensions = QueryClient & SpotExtension & PerpExtension & VpoolExtension & OracleExtension & EpochsExtension & DistributionExtension & GovExtension & UtilsExtension & StakingExtension & IbcExtension & WasmExtension & AuthExtension;
export declare class NibiruQueryClient extends StargateClient {
    readonly nibiruExtensions: NibiruExtensions;
    readonly wasmClient: CosmWasmClient;
    static connect(endpoint: string, options?: StargateClientOptions): Promise<NibiruQueryClient>;
    protected constructor(tmClient: Tendermint34Client, options: StargateClientOptions, wasmClient: CosmWasmClient);
    waitForHeight(height: number): Promise<void>;
    waitForNextBlock(): Promise<void>;
}
//# sourceMappingURL=query.d.ts.map